{"version":3,"sources":["_services/api.js","components/login/login.jsx","components/home/home.jsx","components/task/task.js","components/navbar/navbar.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","ApiFun","url","data","axios","post","get","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","getLogin","console","log","state","email","password","postApi","then","json","result","length","localStorage","setItem","JSON","stringify","history","push","catch","error","alert","getRegister","PostData","firstName","lastName","userName","username","responseCode","Islogin","login","react_default","a","createElement","className","type","onChange","onClick","an","register","cnfmpassword","React","Component","withRouter","Home","_this2","parse","getItem","style","width","map","item","ind","DATE","Date","split","taskName","taskType","startTime","endTime","Link","to","Task","taskCreate","date","starttime","starttimeHH","starttimeMM","endtime","endtimeHH","endtimeMM","color","borderColor","vlaue","react_datepicker_min_default","showPopperArrow","selected","dateFormat","placeholder","Navbar","logout","clear","Redirect","App","BrowserRouter","navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","hydrate","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2PAEMA,EAAQ,8BAaCC,uGATIC,EAAIC,GACf,OAAOC,IAAMC,KAAKL,EAAUE,EAAKC,kCAGvBD,GACV,OAAOE,IAAME,IAAIN,EAAUE,YCP7BK,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAWVQ,aAAc,SAACC,GACXR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GAAgBO,EAAEG,OAAOC,KAAMJ,EAAEG,OAAOE,SAb1Bb,EAgBlBc,SAAS,WACLC,QAAQC,IAAR,WAAuBhB,EAAKiB,MAAMC,MAAMlB,EAAKiB,MAAME,UACnD3B,EAAO4B,QAAQ,QAAQ,CAACF,MAAMlB,EAAKiB,MAAMC,MAAMC,SAASnB,EAAKiB,MAAME,WAClEE,KAAK,SAAAC,GACCA,EAAK5B,KAAK6B,QAAUD,EAAK5B,KAAK6B,OAAOC,OAAO,GAC3CC,aAAaC,QAAQ,OAAOC,KAAKC,UAAUN,EAAK5B,KAAK6B,SACrDvB,EAAKD,MAAM8B,QAAQC,KAAK,OAIxB9B,EAAKD,MAAM8B,QAAQC,KAAK,qBAE7BC,MAAM,SAACC,GACNC,MAAM,+BA7BIjC,EAiClBkC,YAAY,WACR,IAAMC,EAAW,CAACC,UAAUpC,EAAKiB,MAAMmB,UACnCC,SAASrC,EAAKiB,MAAMoB,SACpBC,SAAStC,EAAKiB,MAAMsB,SACpBrB,MAAMlB,EAAKiB,MAAMC,MACjBC,SAASnB,EAAKiB,MAAME,UAExB3B,EAAO4B,QAAQ,WAAWe,GACzBd,KAAK,SAAAC,GACFP,QAAQC,IAAIM,EAAK5B,KAAK,gCACM,QAAzB4B,EAAK5B,KAAK8C,eACTxC,EAAKD,MAAM8B,QAAQC,KAAK,mBACxB9B,EAAKS,SAAS,CAACgC,QAAQ,aAG5BV,MAAM,SAACC,GACNjB,QAAQC,IAAIgB,MAjDFhC,EAsDlB0C,MAAQ,WACJ,OACAC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQnC,KAAK,QAAQkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAMC,SAE7GyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWnC,KAAK,WAAWkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAME,YAGnHwB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,aAAaG,QAASjD,EAAKc,UAA3D,SACA6B,EAAAC,EAAAC,cAAA,gCAA6BF,EAAAC,EAAAC,cAAA,QAAMI,QAAU,WAAMjD,EAAKS,SAAS,CAACgC,QAAQ,kBAAmBK,UAAU,QAAOI,IAAE,GAAnF,uBArE3BlD,EA4ElBmD,SAAW,WACP,OACAR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOnC,KAAK,YAAYkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAMmB,aAEhHO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOnC,KAAK,WAAWkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAMoB,YAE/GM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQnC,KAAK,QAAQkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAMC,SAE7GyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWnC,KAAK,WAAWkC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAME,YAEnHwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWnC,KAAK,eAAekC,UAAU,eAAeE,SAAUhD,EAAKO,aAAcM,MAAOb,EAAKiB,MAAMmC,gBAEvHT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,aAAaG,QAASjD,EAAKkC,aAA3D,YACDS,EAAAC,EAAAC,cAAA,wCAFH,IAEyCF,EAAAC,EAAAC,cAAA,QAAMI,QAAU,WAAMjD,EAAKS,SAAS,CAACgC,QAAQ,WAAYK,UAAU,QAAOI,IAAE,GAA5E,aApGjDlD,EAAKiB,MAAM,CACPmB,UAAU,GACVC,SAAS,GACTE,SAAS,GACTrB,MAAM,GACNC,SAAS,GACTiC,aAAa,GACbX,QAAQ,SATEzC,wEA6Gd,OACI2C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAK1C,KAAKc,MAAMwB,SAEM,SAAtBtC,KAAKc,MAAMwB,QAAqBtC,KAAKuC,QAAUvC,KAAKgD,mBAlHhDE,IAAMC,WA4HXC,cAAWzD,YCpDX0D,cAvEX,SAAAA,EAAYzD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IACdxD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,KAAMJ,KACDkB,MAAM,CACPvB,KAAK,IAHKM,mFASC,IAAAyD,EAAAtD,KAEXe,EAAQS,KAAK+B,MAAMjC,aAAakC,QAAQ,SACxCzC,EAGJ1B,EAAO4B,QAAQ,iBAAiB,CAACF,MAAMA,EAAM,GAAGA,QAC/CG,KAAK,SAAAC,GACCA,EAAK5B,KAAK6B,OAAOC,OAAS,EACzBiC,EAAKhD,SAAS,CAACf,KAAK4B,EAAK5B,KAAK6B,SAI9BkC,EAAK1D,MAAM8B,QAAQC,KAAK,aAE7BC,MAAM,SAACC,GACVjB,QAAQC,IAAI,mBAAmBgB,KAZ7B7B,KAAKJ,MAAM8B,QAAQC,KAAK,oDAkB3B,IAAMpC,EAAOS,KAAKc,MAAMvB,KAEzB,OACEiD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBAAiBc,MAAO,CAACC,MAAM,SAAhD,SACAlB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAjB,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAjB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAjB,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAjB,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAjB,aAGFpD,EACFA,EAAKoE,IAAI,SAACC,EAAMC,GACZ,IAAMC,EAAOF,EAAKG,KAAKC,MAAM,KAAK,GAC9B,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBAAiBc,MAAO,CAACC,MAAM,SAAUG,EAAI,GAC9DrB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBiB,EAAKK,UACxCzB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBiB,EAAKM,UACxC1B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBmB,GACnCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBiB,EAAKO,WACxC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBiB,EAAKQ,YAGjD,IAGX5B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,WAAU9B,EAAAC,EAAAC,cAAA,wBAjEZQ,IAAMC,4BC2JVoB,sBAxJX,SAAAA,EAAY3E,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACd1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KAcV4E,WAAY,WACR,IAAIzD,EAAQS,KAAK+B,MAAMjC,aAAakC,QAAQ,SAAS,GAAGzC,MAElDiB,EAAW,CAACiC,SAASpE,EAAKiB,MAAMmD,SAClCC,SAASrE,EAAKiB,MAAMoD,SACpBO,KAAK5E,EAAKiB,MAAM2D,KAChB1D,MAAMA,EACN2D,UAAU7E,EAAKiB,MAAM6D,YAAa,IAAM9E,EAAKiB,MAAM8D,YACnDC,QAAQhF,EAAKiB,MAAMgE,UAAY,IAAMjF,EAAKiB,MAAMiE,WAEjDlF,EAAKiB,MAAMmD,UAAYpE,EAAKiB,MAAMoD,UAAYrE,EAAKiB,MAAM2D,MAAQ5E,EAAKiB,MAAM6D,aAAe9E,EAAKiB,MAAM8D,aAAe/E,EAAKiB,MAAMgE,WAAajF,EAAKiB,MAAMiE,UACvJ1F,EAAO4B,QAAQ,cAAce,GAC5Bd,KAAK,SAAAC,GAE0B,MAAzBA,EAAK5B,KAAK8C,eACTzB,QAAQC,IAAI,QACZhB,EAAKD,MAAM8B,QAAQC,KAAK,QAG7BC,MAAM,SAACC,GACVjB,QAAQC,IAAI,mBAAmBgB,KAGnChC,EAAKS,SAAS,CAAC0E,MAAM,SAtCPnF,EA0ClBO,aAAc,SAACC,GACXR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GAAgBO,EAAEG,OAAOC,KAAMJ,EAAEG,OAAOE,SAzCxCb,EAAKiB,MAAM,CACPmD,SAAS,GACTC,SAAS,GACTO,KAAM,IAAIV,KACVhD,MAAM,GACN4D,YAAY,GACZC,YAAY,GACZE,UAAU,GACVC,UAAU,GACVC,MAAM,QAXInF,wEA+CX,IAAAyD,EAAAtD,KAEL,OACEwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRa,MAAS,CAACwB,YAAYjF,KAAKc,MAAMmD,SAAW,OAASjE,KAAKc,MAAMkE,OAChEvE,KAAK,WACLkC,UAAU,eACVE,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAMmD,YAG1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACIe,MAAS,CAACwB,YAAYjF,KAAKc,MAAMoD,SAAW,OAASlE,KAAKc,MAAMkE,OAChEvE,KAAK,WACLkC,UAAU,eACVE,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAMoD,UAElB1B,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,WAAd,WACA1C,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,QAAd,QACA1C,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,OAAd,OACA1C,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,OAAd,OACA1C,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,OAAd,SAIR1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAY2C,iBAAiB,EAC1BC,SAAUrF,KAAKc,MAAM2D,KACrB5B,SAAU,SAAAxC,GAAMiD,EAAKhD,SAAS,CAACmE,KAAKpE,KACpCiF,WAAW,aACX3C,UAAU,kBAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SACRnC,KAAK,QACLkC,UAAU,eACVE,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAMC,SAG1ByB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRa,MAAS,CAACwB,YAAYjF,KAAKc,MAAM6D,YAAc,OAAS3E,KAAKc,MAAMkE,OACnEvE,KAAK,cACLkC,UAAU,eACV4C,YAAY,KACZ1C,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAM6D,cAEtBnC,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SACIE,KAAK,OACLa,MAAS,CAACwB,YAAYjF,KAAKc,MAAM8D,YAAc,OAAS5E,KAAKc,MAAMkE,OACnEvE,KAAK,cACLkC,UAAU,eACV4C,YAAY,KACZ1C,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAM8D,gBAI9BpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRa,MAAS,CAACwB,YAAYjF,KAAKc,MAAMgE,UAAY,OAAS9E,KAAKc,MAAMkE,OACjEvE,KAAK,YACLkC,UAAU,eACV4C,YAAY,KACZ1C,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAMgE,YAEtBtC,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRa,MAAS,CAACwB,YAAYjF,KAAKc,MAAMiE,UAAY,OAAS/E,KAAKc,MAAMkE,OACjEvE,KAAK,YACLkC,UAAU,eACV4C,YAAY,KACZ1C,SAAU7C,KAAKI,aACfM,MAAOV,KAAKc,MAAMiE,cAI9BvC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,aAAaG,QAAS9C,KAAKwE,YAA3D,oBAhJGtB,IAAMC,qBCkCVqC,cAnCX,SAAAA,EAAY5F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACd3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,QAMJyF,OAAS,WACLnE,aAAaoE,QACb7F,EAAKS,SAAS,CAACiC,MAAM,WAPrB1C,EAAKiB,MAAQ,CACTyB,MAAM,UAHI1C,wEAcd,OADkB2B,KAAK+B,MAAMjC,aAAakC,QAAQ,SAM1ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,KAAT,SACL9B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,WAAT,YAET9B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACbH,EAAAC,EAAAC,cAAA,WAAOlB,KAAK+B,MAAMjC,aAAakC,QAAQ,SAAWhC,KAAK+B,MAAMjC,aAAakC,QAAQ,SAAS,GAAGvB,UAAW,IACzGO,EAAAC,EAAAC,cAAA,OAAKI,QAAW9C,KAAKyF,QAASzF,KAAKc,MAAMyB,SAX9CC,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAUrB,GAAG,2BAhBXpB,IAAMC,WCyBZyC,mLAfX,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjCb,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW5B,IACvC/B,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAWxG,cAXrCwD,aCGEiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,QAAQlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe,SD2H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9F,KAAK,SAAA+F,GACjCA,EAAaC","file":"static/js/main.cae1be16.chunk.js","sourcesContent":["// import React from 'react';\nimport axios from 'axios'\nconst baseUrl=\"http://localhost:3001/auth/\"\n\n class ApiFun {\n\n    static postApi(url,data){\n        return axios.post(baseUrl + url, data);   \n    }\n\n    static getApi(url){\n        return axios.get(baseUrl + url);   \n    }\n}\n\nexport default ApiFun","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport ApiFun from '../../_services/api'\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:'',\n            lastName:'',\n            username:'',\n            email:'',\n            password:'',\n            cnfmpassword:'',\n            Islogin:'Login'\n        }\n    }\n    handleChange= (e)=> {\n        this.setState({[e.target.name]:e.target.value});\n    }\n    \n    getLogin=()=>{\n        console.log(`in login`,this.state.email,this.state.password)\n        ApiFun.postApi('login',{email:this.state.email,password:this.state.password})\n        .then(json => {\n            if(json.data.result && json.data.result.length>0){\n                localStorage.setItem('auth',JSON.stringify(json.data.result))\n                this.props.history.push('/ ')\n            \n            }\n            else{\n                this.props.history.push('/login-register')\n            }\n        }).catch((error)=>{\n            alert('login failed. Try later!')\n        })\n    }\n    \n    getRegister=()=>{\n        const PostData = {firstName:this.state.firstName,\n            lastName:this.state.lastName,\n            userName:this.state.username,\n            email:this.state.email,\n            password:this.state.password\n        }\n        ApiFun.postApi('register',PostData)\n        .then(json => {\n            console.log(json.data,'response of register api----');\n            if(json.data.responseCode==='200'){\n                this.props.history.push('/login-register')\n                this.setState({Islogin:'Login'})\n            }\n\n        }).catch((error)=>{\n            console.log(error)\n        })\n      \n    }\n    \n    login = () => {\n        return (\n        <div>\n            <form>\n                <div className='form-container'>\n                    <label>Email</label>\n                    <input type=\"email\" name=\"email\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.email} />\n                </div>\n                <div className='form-container'>\n                    <label>Password </label>\n                    <input type=\"password\" name=\"password\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.password} />\n                </div>\n                \n                <div>\n                    <button type=\"button\" className=\"btn-submit\" onClick={this.getLogin}>Login</button>\n                    <span>Not registered? </span><span onClick ={() =>{this.setState({Islogin:'Registration'})}} className=\"login\"an>Create  account</span>\n                </div>\n            </form>\n        </div>\n        )\n    }\n\n    register = () => {\n        return (\n        <div>\n            <form>\n                <div className='form-container'>\n                    <label>First Name</label>\n                    <input type=\"text\" name=\"firstName\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.firstName} />\n                </div>\n                <div className='form-container'>\n                    <label>Last Name</label>\n                    <input type=\"text\" name=\"lastName\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.lastName} />\n                </div>\n                <div className='form-container'>\n                    <label>Email</label>\n                    <input type=\"email\" name=\"email\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.email} />\n                </div>\n                <div className='form-container'>\n                    <label>Password </label>\n                    <input type=\"password\" name=\"password\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.password} />\n                </div>\n                <div className='form-container'>\n                    <label>Confirm Password</label>\n                    <input type=\"username\" name=\"cnfmpassword\" className=\"form-elemant\" onChange={this.handleChange} value={this.state.cnfmpassword} />\n                </div>\n                <div>\n                    <button type=\"button\" className=\"btn-submit\" onClick={this.getRegister}>Register</button>\n                   <span>Already have an account?</span> <span onClick ={() =>{this.setState({Islogin:'Login'})}} className=\"login\"an>Login</span>\n                </div>\n        </form>\n    </div>\n        )\n    }\n    render(){\n        return (\n            <div className=\"form-wrapper\">\n                <h2>{this.state.Islogin}</h2>\n                {\n                this.state.Islogin == 'Login' ? this.login() : this.register()\n                 \n                }\n          </div>\n            \n        )\n    }\n\n}\n\nexport default withRouter(Login);\n\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport ApiFun from '../../_services/api'\nclass Home extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            data:''\n            \n        }\n    }\n      \n   \n    componentDidMount(){\n   \n        var email = JSON.parse(localStorage.getItem('auth'));\n        if(!email){\n          this.props.history.push('/login-register')\n        }else{\n        ApiFun.postApi('getTaskDetails',{email:email[0].email})\n        .then(json => {\n            if(json.data.result.length > 0){\n                this.setState({data:json.data.result})\n                \n            }\n            else{\n                this.props.history.push('/create')\n            }\n        }).catch((error)=>{\n        console.log(\"error-----------\",error)\n        })\n    }\n    \n    }\n   render(){\n       const data = this.state.data;\n     \n      return (\n        <div className=\"task\">\n        <h2>Task Details</h2>\n        <div>\n            <div className = 'task-wrapper'>\n                <div className = 'task-container' style={{width:'40px'}}>S.NO.</div>\n                <div className = 'task-container'>Task</div>\n                <div className = 'task-container'>Project</div>\n                <div className = 'task-container'>Date</div>\n                <div className = 'task-container'>Start Time</div>\n                <div className = 'task-container'>End Time</div>\n            </div>\n\n            { data ?\n            data.map((item, ind) => {\n                const DATE = item.Date.split('T')[0];\n                    return(\n                        <div className = 'task-wrapper'>\n                            <div className = 'task-container' style={{width:'40px'}}>{ind+1}</div>\n                            <div className = 'task-container'>{item.taskName}</div>\n                            <div className = 'task-container'>{item.taskType}</div>\n                            <div className = 'task-container'>{DATE}</div>\n                            <div className = 'task-container'>{item.startTime}</div>\n                            <div className = 'task-container'>{item.endTime}</div>\n                        </div>\n                    )\n                }):\"\"\n            }\n        </div>\n        <div className = 'create-task'>\n            <Link to=\"/create\"><i>+</i></Link>\n        </div>\n        </div>\n      )\n    }\n}\n\n\nexport default Home;","import React from 'react';\r\nimport ApiFun from '../../_services/api'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nclass Task extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            taskName:'',\r\n            taskType:'',\r\n            date: new Date(),\r\n            email:'',\r\n            starttimeHH:'',\r\n            starttimeMM:'',\r\n            endtimeHH:'',\r\n            endtimeMM:'',\r\n            color:\"#ddd\"\r\n        }\r\n    }\r\n    \r\n    taskCreate =() =>{\r\n        var email = JSON.parse(localStorage.getItem('auth'))[0].email;\r\n    \r\n        const PostData = {taskName:this.state.taskName,\r\n            taskType:this.state.taskType,\r\n            date:this.state.date,\r\n            email:email,\r\n            starttime:this.state.starttimeHH +':' + this.state.starttimeMM,\r\n            endtime:this.state.endtimeHH + ':' + this.state.endtimeMM\r\n        }\r\n        if(this.state.taskName && this.state.taskType && this.state.date && this.state.starttimeHH && this.state.starttimeMM && this.state.endtimeHH && this.state.endtimeMM) {\r\n            ApiFun.postApi('taskDetails',PostData)\r\n            .then(json => {\r\n                \r\n                if(json.data.responseCode===200){\r\n                    console.log('done')\r\n                    this.props.history.push('/')\r\n                }\r\n            \r\n            }).catch((error)=>{\r\n            console.log(\"error-----------\",error)\r\n            })\r\n        } else {\r\n        this.setState({color:'red'})\r\n        }\r\n    }\r\n\r\n    handleChange= (e)=> {\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    \r\n   render(){\r\n    const array = [1,2,3,4,5,6,7];\r\n      return (\r\n        <div className=\"form-wrapper\">\r\n        <h2>Create Task</h2>\r\n        <form>\r\n            <div className='form-container'>\r\n                <label>Task Name</label>\r\n                <input type=\"text\" \r\n                    style = {{borderColor:this.state.taskName ? '#ddd' : this.state.color}}\r\n                    name=\"taskName\" \r\n                    className=\"form-elemant\" \r\n                    onChange={this.handleChange} \r\n                    value={this.state.taskName} \r\n               />\r\n            </div>\r\n            <div className='form-container'>\r\n                <label>Project</label>\r\n                <select\r\n                    style = {{borderColor:this.state.taskType ? '#ddd' : this.state.color}}\r\n                    name=\"taskType\" \r\n                    className=\"form-elemant\" \r\n                    onChange={this.handleChange} \r\n                    value={this.state.taskType}\r\n                > \r\n                    <option vlaue='Indocan'>Indocan</option>\r\n                    <option vlaue='asad'>asad</option>\r\n                    <option vlaue='qaz'>qaz</option>\r\n                    <option vlaue='wsx'>wsx</option>\r\n                    <option vlaue='rfv'>rfv</option>\r\n              \r\n                </select>\r\n            </div>\r\n            <div className='form-container'>\r\n                <label>Date</label>\r\n                <DatePicker showPopperArrow={false}\r\n                   selected={this.state.date}\r\n                   onChange={e => {this.setState({date:e})}}\r\n                   dateFormat=\"dd/MM/yyyy\"\r\n                   className=\"form-elemant\"\r\n                />\r\n            </div>\r\n            <div className='form-container'>\r\n                <input type=\"hidden\" \r\n                    name=\"email\" \r\n                    className=\"form-elemant\" \r\n                    onChange={this.handleChange} \r\n                    value={this.state.email} \r\n                />\r\n            </div>\r\n            <div className='form-container'>\r\n                <label>start time </label>\r\n                <div className = \"time-container\">\r\n                    <input type=\"text\" \r\n                        style = {{borderColor:this.state.starttimeHH ? '#ddd' : this.state.color}}\r\n                        name=\"starttimeHH\" \r\n                        className=\"time-elemant\" \r\n                        placeholder=\"HH\" \r\n                        onChange={this.handleChange}\r\n                        value={this.state.starttimeHH}   \r\n                   />\r\n                    <span>:</span>\r\n                    <input \r\n                        type=\"text\" \r\n                        style = {{borderColor:this.state.starttimeMM ? '#ddd' : this.state.color}}\r\n                        name=\"starttimeMM\" \r\n                        className=\"time-elemant\" \r\n                        placeholder=\"MM\" \r\n                        onChange={this.handleChange} \r\n                        value={this.state.starttimeMM} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='form-container'>\r\n                <label>end time</label>\r\n                <div className = \"time-container\">\r\n                    <input type=\"text\" \r\n                        style = {{borderColor:this.state.endtimeHH ? '#ddd' : this.state.color}}\r\n                        name=\"endtimeHH\" \r\n                        className=\"time-elemant\" \r\n                        placeholder=\"HH\" \r\n                        onChange={this.handleChange} \r\n                        value={this.state.endtimeHH} \r\n                    />\r\n                    <span>:</span>\r\n                    <input type=\"text\" \r\n                        style = {{borderColor:this.state.endtimeMM ? '#ddd' : this.state.color}}\r\n                        name=\"endtimeMM\"\r\n                        className=\"time-elemant\" \r\n                        placeholder=\"MM\" \r\n                        onChange={this.handleChange} \r\n                        value={this.state.endtimeMM} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" className=\"btn-submit\" onClick={this.taskCreate}>Create</button>\r\n               \r\n            </div>\r\n            </form>\r\n        </div>\r\n      )\r\n}\r\n}\r\n\r\nexport default Task;","import React from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            login:'Logout'\r\n        }\r\n    }\r\n    \r\n    logout = () => {\r\n        localStorage.clear();\r\n        this.setState({login:'Login'})\r\n\r\n    }\r\n    render() {\r\n        const loginData = JSON.parse(localStorage.getItem('auth'));\r\n        if(!loginData){\r\n            return <Redirect to='/login-register' />\r\n        }\r\n\r\n            return(\r\n                <div className=\"nav-wrapper\">    \r\n                    <div className=\"right\">\r\n                        <div><Link to=\"/\">Home</Link></div>\r\n                        <div><Link to=\"/create\">Create</Link></div>\r\n                    </div>\r\n                    <div className = 'left'>\r\n                        <div >{JSON.parse(localStorage.getItem('auth')) ? JSON.parse(localStorage.getItem('auth'))[0].firstName :''}</div>\r\n                        <div onClick = {this.logout}>{this.state.login}</div>\r\n                    </div>\r\n               </div>\r\n            )\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Login from '../src/components/login/login';\nimport Home from '../src/components/home/home';\nimport Task from '../src/components/task/task';\nimport Navbar from '../src/components/navbar/navbar';\n//import Protected from '../src/components/login/protected';\nclass App extends Component {\n \n\n  render() {\n    return (\n      <Router>\n        <div className=\"\">\n            <Navbar />\n            <Switch> \n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/create\" component={Task}/>\n              <Route path=\"/login-register\" component={Login}/> \n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}